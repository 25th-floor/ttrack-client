/* eslint-disable jsx-a11y/anchor-is-valid */
// @flow
// TODO remove a tags
import React from 'react';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
import { NavLink, withRouter } from 'react-router-dom';

import { Motto, ProfileWidget } from '@components';

import { Actions, type AppState } from '@data';
import type { ApiUserType } from '@data/Resources';

import styles from './Navigation.module.css';

type LogoutFn = (user: ApiUserType) => void; // todo
export type NavigationProps = {
    onLogout: LogoutFn,
    user: ApiUserType,
};

/**
 * Navigation
 */
const NavigationContainer = ({ user, onLogout }: NavigationProps) => (
    <nav className={`navbar navbar-inverse navbar-fixed-top ${styles.navbar}`}>
        <div className={`navbar-header ${styles.header}`}>
            <a className={`${styles.brand}`} href="/">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
                    <path
                        d="M 100.00,0.00
                           C 100.00,0.00 100.00,20.00 100.00,20.00
                             100.00,20.00 80.00,20.00 80.00,20.00
                             80.00,20.00 80.00,100.00 80.00,100.00
                             80.00,100.00 60.00,100.00 60.00,100.00
                             60.00,100.00 60.00,20.00 60.00,20.00
                             60.00,20.00 40.00,20.00 40.00,20.00
                             40.00,20.00 40.00,100.00 40.00,100.00
                             40.00,100.00 20.00,100.00 20.00,100.00
                             20.00,100.00 20.00,20.00 20.00,20.00
                             20.00,20.00 0.00,20.00 0.00,20.00
                             0.00,20.00 0.00,0.00 0.00,0.00
                             0.00,0.00 100.00,0.00 100.00,0.00 Z"
                    />
                </svg>
                <span className={`title ${styles.title}`}>
                    <strong>Time</strong> Tracking
                </span>

                <small className={styles.motto}>
                    <Motto />
                </small>
            </a>
        </div>

        <ProfileWidget user={user} />

        <div className={`navbar-container ${styles['navbar-container']}`}>
            <ul className={`nav navbar-nav ${styles['navbar-nav']}`}>
                <li>
                    <NavLink to="/month" activeClassName={styles.active}>
                        <i className="fa fa-calendar" />
                        <span>Monatsansicht</span>
                    </NavLink>
                </li>
                <li>
                    <NavLink to="/vacations" activeClassName={styles.active}>
                        <i className="fa fa-car" />
                        <span>Urlaube</span>
                    </NavLink>
                </li>
                <li className={`logout ${styles.logout}`}>
                    <a onClick={onLogout} href="#">
                        <i className="fa fa-power-off" />
                        <span>Logout</span>
                    </a>
                </li>
            </ul>
        </div>
    </nav>
);

const mapStateToProps = ({ auth }: AppState) => ({
    user: auth.user,
});

const mapDispatchToProps = dispatch => ({
    onLogout: bindActionCreators(Actions.Auth.logout, dispatch),
});

export const Navigation = withRouter(connect(mapStateToProps, mapDispatchToProps)(NavigationContainer));
